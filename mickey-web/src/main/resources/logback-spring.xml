<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 引入spring的默认日志配置文件,具体的可以跟踪对应的文件地址查看 -->
    <include resource="org/springframework/boot/logging/logback/base.xml"/>

    <!-- 日志文件路径，不加/代表使用相对路径，本地开发可以这样设置，但是线上必须设置绝对路径 -->
    <property name="LOG_HOME" value="logs"/>
    <!-- 日志文件名称，需要自己根据实际情况调整 -->
    <property name="LOG_NAME" value="mickey-tech"/>
    <!-- 日志保留天数 -->
    <property name="MAX_HISTORY" value="30"/>

    <!-- 设置context为主机名 -->
    <contextName>${HOSTNAME}</contextName>

    <!-- 设置格式化参数,参数说明如下： -->
    <!-- %d的格式yyyy-MM-dd HH:mm:ss,SSS,例如：2020-01-07 14:34:06,130。支持SimpleDateFormat格式，可以自定义，例如：%d{yyyy-MM-dd HH:mm:ss.SSS} -->
    <!-- 业务名：根据自己的实际情况修改，例如：xxx-dev -->
    <!-- %contextName 在上面已经改成取HOSTNAME，会取主机名 -->
    <!-- %level 输出日志级别 -->
    <!-- %thread 输出当前线程名称 -->
    <!-- %X{requestId} 输出在拦截器里：LogInterceptor.java中MDC设置的属性，名字可以自己定义，但必须两边一致 -->
    <!-- %C.%M:%line 分别是：文件名.方法名:行号 -->
    <!-- %msg%n 具体的消息内容和换行 -->
    <property name="LOG_PATTERN"
              value="%d{UTF-8} [mickey-tech-server] [%contextName] [%level] [%thread] [%X{requestId}] [%C.%M:%line] - %msg%n"/>

    <!-- 标准配置,只打印到控制台，在dev或者local环境中可以使用 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 操作索引按照每天生成日志文件 -->
    <appender name="TRACE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>
                ${LOG_HOME}/${LOG_NAME}.info.%d{yyyy-MM-dd}.${HOSTNAME}.log
            </FileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 错误日志记录，将其和正常的日志文件分开，只是为了更容易找到错误的信息。在正常的日志文件中也会有错误的日志记录。 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 只打印错误日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>
                ${LOG_HOME}/${LOG_NAME}.error.%d{yyyy-MM-dd}.${HOSTNAME}.log
            </FileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 设置接收的日志级别 -->
    <root level="INFO">
        <!-- 设置接收的配置 -->
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="TRACE_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>

    <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG"/>
    <logger name="org.hibernate.SQL" level="DEBUG"/>
    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG"/>
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG"/>

</configuration>